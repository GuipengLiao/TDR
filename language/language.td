enum EN_TD_LANGUAGE_STRING
{
	E_LS_UNKNOW,
	E_LS_IDENTIFIER_NOT_DEFINED,
	E_LS_IDENTIFIER_REDEFINITION,
	E_LS_IDENTIFIER_NOT_TYPE,
	E_LS_IDENTIFIER_NOT_POSITIVE_INTEGER,
	E_LS_IDENTIFIER_NOT_VALUE,
	E_LS_IDENTIFIER_LENGTH_ERROR,
	E_LS_IDENTIFIER_NOT_STRING,
	E_LS_STRING_LENGTH_NOT_DEFINED,
	E_LS_CANNOT_USE_RESERVED_LANGUAGE_KEYWORD,
	E_LS_CANNOT_OPEN_FILE,
	E_LS_SYNTAX_ERROR,
	E_LS_OUT_OF_MEMORY,
	E_LS_CHARACTER_CONSTANT_FORMAT_ERROR,
	E_LS_STRING_CONSTANT_FORMAT_ERROR,
	E_LS_NUMBER_ERROR_RANGE,
	E_LS_CAN_NOT_DEFINE_STRING_LENGTH_HERE,
	E_LS_CONSTANT_TYPES_DO_NOT_MATCH,
	E_LS_CONSTANT_OVER_THE_RANGE,
	E_LS_CONST_TYPE_ERROR,
	E_LS_ENUM_HAVE_EQUAL_ELEMENTS,
	E_LS_TOO_MANY_MEMBERS,
	E_LS_TOO_MANY_PARAMETERS,
	E_LS_TOO_MANY_ARGUMENTS,
	E_LS_NOT_INTEGER_VALUE,
	E_LS_NOT_INTEGER_TYPE,
	E_LS_ARGUMENT_TYPE_MISMATCH,
	E_LS_NOT_ENUM_TYPE,
};

const uint32 TD_LANGUAGE_STRING_NUM = count(EN_TD_LANGUAGE_STRING);

const uint32 TD_MAX_LANGUAGE_STRING_LENGTH = 1024;

struct ST_TD_LANGUAGE_STRING
{
	EN_TD_LANGUAGE_STRING language_string_number;
	string<TD_MAX_LANGUAGE_STRING_LENGTH> language_string;
};

struct ST_TD_LANGUAGE_STRING_LIBRARY
{
	vector<ST_TD_LANGUAGE_STRING, TD_LANGUAGE_STRING_NUM> language_string_list;
};

