function print_val(val)
	if val.type == 0 then
		io.write(val.val.identifier)
	elseif val.type == 1 then
		io.write("'")
		if(val.val.c == '\n')then
			io.write('\\n')
		else
			io.write(val.val.c)
		end
		io.write("'")
	elseif val.type == 2 then
		io.write(val.val.d)
	elseif val.type == 3 then
		io.write(val.val.b)
	elseif val.type == 4 then
		--需要处理字符串中的转义
		io.write('"')
		io.write(val.val.str)
		io.write('"')
	elseif val.type == 5 then
		io.write(val.val.i64)
	elseif val.type == 6 then
		io.write(val.val.ui64)
	elseif val.type == 7 then
		io.write(val.val.hex_i64)
	elseif val.type == 8 then
		io.write(val.val.hex_ui64)
	end
end

function on_const(const)
	io.write('#define\t')
	io.write(const.identifier)
	io.write(' ')
	print_val(const.val)
	io.write('\n')
end

function on_typedef(typedef)
	io.write('typedef')
	io.write(' ')
	if(typedef.type.type == 0)then
		if(typedef.type.st == 4)then
			io.write('hpuint8')
		end
	end
	io.write(' ')
	io.write(typedef.name)
	io.write('\n')
end

function on_enum(enum)

end

for key, value in pairs(hd['definition_list']) do
	if(value.type == 1)then
		on_const(value.definition.de_const)
	elseif(value.type == 5)then
		on_typedef(value.definition.de_typedef)
	elseif(value.type == 2)then
		on_enum(value.definition.de_enum)
	end
end
